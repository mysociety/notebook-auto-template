name: Run cookiecutter on first push

on: [push]

jobs:
  run-cookiecutter:
    if: ${{ github.repository != 'mysociety/python-data-template' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Install cookiecutter
        run: pip3 install cookiecutter

      - uses: actions/github-script@v4
        id: fetch-repo-and-user-details
        with:
          script: |
            const query = `query($owner:String!, $name:String!) {
              repository(owner:$owner, name:$name) {
                name
                description
                owner {
                  login
                  ... on User {
                    name
                  }
                  ... on Organization {
                    name
                  }
                }
              }
            }`;
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo
            }
            const result = await github.graphql(query, variables)
            console.log(result)
            return result

      - name: Rebuild contents using cookiecutter
        env:
          INFO: ${{ steps.fetch-repo-and-user-details.outputs.result }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Delete this workflow:
          rm -rf .github
          rm -rf .git
          export REPO_NAME=$(echo $INFO | jq -r '.repository.name')
          export REPO_NAME=$(echo $INFO | jq -r '.repository.name')
          git config --global user.name "Cookie Cutter"
          git config --global user.email "<>"
          # Run cookiecutter
          cookiecutter gh:mysociety/cookie_data_repo --no-input \
            project_name=$REPO_NAME \
            repo_name=$REPO_NAME \
            github_id=$GITHUB_REPOSITORY \
            description="$(echo $INFO | jq -r .repository.description)"
          # Move generated content to root directory of repo
          mv $REPO_NAME/* .
          # And .github and .gitignore too:
          mv $REPO_NAME/.gitignore .
          mv $REPO_NAME/.gitattributes .
          mv $REPO_NAME/.git .
          git remote add origin https://$GITHUB_ACTOR:$TOKEN@github.com/$GITHUB_REPOSITORY.git
          git push --force --set-upstream origin main

      - name: "enable github pages"
        uses: actions/github-script@v6
        with:
          script: |
            result = await github.request('POST /repos/{owner}/{repo}/pages', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              source: {
                branch: 'main',
                path: '/docs'
              }
            })
